/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Reply as PrismaReply } from "@prisma/client";

export class ReplyServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.ReplyCountArgs, "select">): Promise<number> {
    return this.prisma.reply.count(args);
  }

  async replies(args: Prisma.ReplyFindManyArgs): Promise<PrismaReply[]> {
    return this.prisma.reply.findMany(args);
  }
  async reply(args: Prisma.ReplyFindUniqueArgs): Promise<PrismaReply | null> {
    return this.prisma.reply.findUnique(args);
  }
  async createReply(args: Prisma.ReplyCreateArgs): Promise<PrismaReply> {
    return this.prisma.reply.create(args);
  }
  async updateReply(args: Prisma.ReplyUpdateArgs): Promise<PrismaReply> {
    return this.prisma.reply.update(args);
  }
  async deleteReply(args: Prisma.ReplyDeleteArgs): Promise<PrismaReply> {
    return this.prisma.reply.delete(args);
  }
}
